from bdsim import BlockDiagram as BlockDiagram
from bdsim.components import Block as Block, FunctionBlock as FunctionBlock, Plug as Plug, SubsystemBlock as SubsystemBlock, block as block
from typing import Any, Optional, Union

class Item(FunctionBlock):
    type: str = ...
    item: Any = ...
    def __init__(self, item: str, *inputs: Union[Block, Plug], **kwargs: Any) -> None: ...
    def output(self, t: Optional[Any] = ...): ...

class Mux(FunctionBlock):
    type: str = ...
    def __init__(self, nin: int=..., *inputs: Union[Block, Plug], **kwargs: Any) -> None: ...
    def output(self, t: Optional[Any] = ...): ...

class DeMux(FunctionBlock):
    type: str = ...
    def __init__(self, nout: int=..., *inputs: Union[Block, Plug], **kwargs: Any) -> None: ...
    def output(self, t: Optional[Any] = ...): ...

class SubSystem(SubsystemBlock):
    type: str = ...
    ssvar: Any = ...
    subsystem: Any = ...
    ssname: Any = ...
    def __init__(self, subsys: Union[str, BlockDiagram], *inputs: Union[Block, Plug], **kwargs: Any) -> None: ...

class InPort(SubsystemBlock):
    type: str = ...
    def __init__(self, nout: int=..., **kwargs: Any) -> None: ...

class OutPort(SubsystemBlock):
    type: str = ...
    def __init__(self, nin: int=..., *inputs: Union[Block, Plug], **kwargs: Any) -> None: ...
